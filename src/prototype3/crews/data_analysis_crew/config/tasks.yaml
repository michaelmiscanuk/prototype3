process_prompt:
  description: |
    1. Read and analyze the provided inputs:
       - User prompt (in Czech or English)
       - Schema metadata (containing Czech column names and values)
    
    2. Process the prompt by:
       - Identifying key terms in either language
       - Matching terms to their Czech equivalents in schema
       - Handling Czech diacritics and special characters
       - Converting geographical names between languages and similar concepts.

    3. Create pandas query by:
       - Using exact column names from schema (can be Czech or English)
       - Matching user prompt terms to correct data values (in the schema we can 
          find list of unique values in specific column)
       - Ensuring proper string matching for Czech characters
       - Be careful that data can contain records for totals, for example:
          in Column "CZ, Region" we can find "Czech Republic" and "Regions". 
          So you need to be carefully examine dimensional unique values in a schema.

       Examples:
       df[df["Column1"] == "Value1"]["value"]
       df[df["Column1"].isin(["Value1", "Value2"])]["value"].sum()
       df[(df["Column1"] == "Value1") & (df["Column2"] == "Value2")]["value"].mean()
       df.groupby("Column1")["value"].sum()

    4. Execute and validate:
       - Use pandas query tool to execute the constructed query
       - Verify if results match the original query intent
       - Handle any errors by refining the pandas query
       - Return results in YAML format

    5. Post-process results:
       - Ensure all Czech characters are preserved
       - Format output maintaining bilingual clarity

    6. If a user asks for some kind of aggregation, like sum, mean, etc.:
       - Use the appropriate pandas function to perform the aggregation
       - Return the result in a clear and concise format

    User prompt to analyze: {prompt}
    Schema metadata: {schema}
  expected_output: A pandas query that correctly processes the input prompt, together with result of this query.
  agent: data_query_agent
